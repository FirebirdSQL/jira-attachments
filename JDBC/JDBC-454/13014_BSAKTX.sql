/******************************************************************************/
/****              Generated by IBExpert 16.09.2016 09:37:46               ****/
/******************************************************************************/

/******************************************************************************/
/****     Following SET SQL DIALECT is just for the Database Comparer      ****/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/


CREATE GENERATOR GEN_BSAKTX;

CREATE TABLE BSAKTX (
    ID                D_ID /* D_ID = INTEGER NOT NULL */,
    BSA_ID_LINKKEY    D_ID /* D_ID = INTEGER NOT NULL */,
    TEXT              D_BLOBTEXT /* D_BLOBTEXT = BLOB SUB_TYPE 0 SEGMENT SIZE 80 */,
    BKUNDE_ID_KUNNR   D_IDNULL /* D_IDNULL = INTEGER */,
    BKUSE_ID_KUNGRP1  D_IDNULL /* D_IDNULL = INTEGER */,
    BKUSE2_ID         D_IDNULL /* D_IDNULL = INTEGER */,
    BSPRA_ID          D_ID /* D_ID = INTEGER NOT NULL */,
    KATEGORIE         D_ZEICHENNULL NOT NULL /* D_ZEICHENNULL = VARCHAR(1) */,
    MANUELL           D_YESNONOTNULL /* D_YESNONOTNULL = VARCHAR(1) NOT NULL */,
    NEUESEITE_JN      D_YESNONOTNULL COLLATE DE_DE /* D_YESNONOTNULL = VARCHAR(1) NOT NULL */,
    BAUFSTATUS        D_CHARNULL COLLATE DE_DE /* D_CHARNULL = VARCHAR(1) */,
    BENUTZER          D_BENUTZER /* D_BENUTZER = VARCHAR(15) DEFAULT USER */,
    GESPEICHERT       D_GESPEICHERT /* D_GESPEICHERT = TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL */
);




/******************************************************************************/
/****                          Unique Constraints                          ****/
/******************************************************************************/

ALTER TABLE BSAKTX ADD CONSTRAINT UK_BSAKTX UNIQUE (BSA_ID_LINKKEY, BSPRA_ID, KATEGORIE, BKUNDE_ID_KUNNR, BKUSE_ID_KUNGRP1, BKUSE2_ID, BAUFSTATUS);


/******************************************************************************/
/****                             Primary Keys                             ****/
/******************************************************************************/

ALTER TABLE BSAKTX ADD CONSTRAINT PK_BSAKTX PRIMARY KEY (ID);


/******************************************************************************/
/****                             Foreign Keys                             ****/
/******************************************************************************/

ALTER TABLE BSAKTX ADD CONSTRAINT FK_BSAKTX_BKUNDE FOREIGN KEY (BKUNDE_ID_KUNNR) REFERENCES BKUNDE (ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE BSAKTX ADD CONSTRAINT FK_BSAKTX_BKUSE1 FOREIGN KEY (BKUSE_ID_KUNGRP1) REFERENCES BKUSE1 (ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE BSAKTX ADD CONSTRAINT FK_BSAKTX_BKUSE2 FOREIGN KEY (BKUSE2_ID) REFERENCES BKUSE2 (ID) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE BSAKTX ADD CONSTRAINT REF_BSAKTX_BSA_LINKKEY FOREIGN KEY (BSA_ID_LINKKEY) REFERENCES BSA (ID) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE BSAKTX ADD CONSTRAINT REF_BSAKTX_BSPRA_SPRACHE_ID FOREIGN KEY (BSPRA_ID) REFERENCES BSPRA (ID) ON DELETE CASCADE ON UPDATE CASCADE;


/******************************************************************************/
/****                               Indices                                ****/
/******************************************************************************/

CREATE DESCENDING INDEX BSAKTX_ID_DESC ON BSAKTX (ID);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: BSAKTX_AU0 */
CREATE OR ALTER TRIGGER BSAKTX_AU0 FOR BSAKTX
ACTIVE AFTER UPDATE POSITION 0
AS
BEGIN
  /* LETZTER STAND 08.05.2012 14:31:21 MG */
  /* ERSTER STAND 08.05.2012 14:31:21 MG */
  /* PROTOKOLLIEREN, DASS AKTION HIER DURCHGELAUFEN IST */
  IF (GEN_ID(GEN_ENTWICKLUNG,0) = 0) THEN
    INSERT INTO A_WASMACHTIB (PROGRAMMTEIL) VALUES ('BSAKTX_AU0');

  IF (USER <> 'WORSTCASE') THEN
  BEGIN
    -- Historie schreiben
    IF (EXISTS (SELECT A.ID
                FROM BFIRMA A
                WHERE A.ID = 1 AND A.GIX = A.JA) AND
        NEW.KATEGORIE = 'I' AND
        F_BLOBASPCHAR(NEW.TEXT) IS DISTINCT FROM F_BLOBASPCHAR(OLD.TEXT)) THEN
      INSERT INTO BGIX (
        BSLIN_ID_LINKKEY,
        BKUNOT_ID_LINKKEY,
        BSAKTX_ID_LINKKEY,
        BPROJNOT_ID_LINKKEY,
        TEXT_OLD,
        TEXT_NEW)
      VALUES (
        NULL,
        NULL,
        NEW.ID,
        NULL,
        OLD.TEXT,
        NEW.TEXT);
  END
END
^


/* Trigger: BSAKTX_BIU2 */
CREATE OR ALTER TRIGGER BSAKTX_BIU2 FOR BSAKTX
ACTIVE BEFORE INSERT OR UPDATE POSITION 2
AS
DECLARE VARIABLE SJA VARCHAR(1);
DECLARE VARIABLE SNEIN VARCHAR(1);
BEGIN
  /* LETZTER STAND 01.10.2009 17:03:47 RP */
  /* ERSTER STAND 09.09.2009 10:14:12 RP */
  /* PROTOKOLLIEREN, DASS AKTION HIER DURCHGELAUFEN IST */
  IF (GEN_ID(GEN_ENTWICKLUNG,0) = 0) THEN
    INSERT INTO A_WASMACHTIB (PROGRAMMTEIL) VALUES ('BSAKTX_BIU2');

  IF (INSERTING) THEN
  BEGIN
    IF ((NEW.ID IS NULL) OR (NEW.ID = 0)) THEN NEW.ID = GEN_ID(GEN_BSAKTX,1);
  END

  IF (UPDATING) THEN
  BEGIN
    IF (NEW.GESPEICHERT <> OLD.GESPEICHERT) THEN EXCEPTION KEINE_AENDERUNG;
  END

  EXECUTE PROCEDURE P_BFIRMA_JANEIN RETURNING_VALUES (:SJA, :SNEIN);

  NEW.BENUTZER = USER;
  NEW.GESPEICHERT = CURRENT_TIMESTAMP;
  IF (NEW.BSA_ID_LINKKEY = 0) THEN NEW.BSA_ID_LINKKEY = NULL;
  IF (NEW.BKUNDE_ID_KUNNR = 0) THEN NEW.BKUNDE_ID_KUNNR = NULL;
  IF (NEW.BSPRA_ID = 0) THEN NEW.BSPRA_ID = NULL;
  IF (NEW.BKUSE_ID_KUNGRP1 = 0) THEN NEW.BKUSE_ID_KUNGRP1 = NULL;
  IF (NEW.BKUSE2_ID = 0) THEN NEW.BKUSE2_ID = NULL;

  IF ((NEW.MANUELL IS NULL) OR (NOT NEW.MANUELL IN (SJA, SNEIN))) THEN NEW.MANUELL = :SJA;
  IF ((NEW.NEUESEITE_JN IS NULL) OR (NOT NEW.NEUESEITE_JN IN (SJA, SNEIN))) THEN NEW.NEUESEITE_JN = :SNEIN;
  IF ((NEW.BAUFSTATUS IS NULL) OR (NOT NEW.BAUFSTATUS IN ('1', '2', '3'))) THEN NEW.BAUFSTATUS = '3';
      
  -- Es darf nur 1 und 2 oder 3 vergeben werden
  IF (NEW.BAUFSTATUS = '3') THEN
  BEGIN
    IF (EXISTS (SELECT FIRST 1 A.ID
                FROM BSAKTX A
                WHERE A.BSA_ID_LINKKEY = NEW.BSA_ID_LINKKEY AND   
                      A.BSPRA_ID = NEW.BSPRA_ID AND
                      ((A.BKUNDE_ID_KUNNR = NEW.BKUNDE_ID_KUNNR) OR (A.BKUNDE_ID_KUNNR IS NULL)) AND   
                      ((A.BKUSE_ID_KUNGRP1 = NEW.BKUSE_ID_KUNGRP1) OR (A.BKUSE_ID_KUNGRP1 IS NULL)) AND
                      ((A.BKUSE2_ID = NEW.BKUSE2_ID) OR (A.BKUSE2_ID IS NULL)) AND
                      ((A.KATEGORIE = NEW.KATEGORIE) OR (A.KATEGORIE IS NULL)) AND
                      A.BAUFSTATUS IN ('1', '2') AND
                      A.ID <> NEW.ID)) THEN
      EXCEPTION INSERT_NICHT_ERLAUBT;
  END    
  ELSE
  BEGIN
    IF (EXISTS (SELECT FIRST 1 A.ID
                FROM BSAKTX A
                WHERE A.BSA_ID_LINKKEY = NEW.BSA_ID_LINKKEY AND   
                      A.BSPRA_ID = NEW.BSPRA_ID AND
                      ((A.BKUNDE_ID_KUNNR = NEW.BKUNDE_ID_KUNNR) OR (A.BKUNDE_ID_KUNNR IS NULL)) AND   
                      ((A.BKUSE_ID_KUNGRP1 = NEW.BKUSE_ID_KUNGRP1) OR (A.BKUSE_ID_KUNGRP1 IS NULL)) AND
                      ((A.BKUSE2_ID = NEW.BKUSE2_ID) OR (A.BKUSE2_ID IS NULL)) AND
                      ((A.KATEGORIE = NEW.KATEGORIE) OR (A.KATEGORIE IS NULL)) AND
                      A.BAUFSTATUS = '3' AND
                      A.ID <> NEW.ID)) THEN
      EXCEPTION INSERT_NICHT_ERLAUBT;
  END

  -- Es darf nur ein von den 3 Bezugsfeldern belegt sein
  IF (NEW.BKUNDE_ID_KUNNR IS NOT NULL) THEN
  BEGIN
    NEW.BKUSE_ID_KUNGRP1 = NULL;
    NEW.BKUSE2_ID = NULL;
  END
  ELSE
  IF (NEW.BKUSE_ID_KUNGRP1 IS NOT NULL) THEN
    NEW.BKUSE2_ID = NULL;
END
^


SET TERM ; ^



/******************************************************************************/
/****                             Descriptions                             ****/
/******************************************************************************/

COMMENT ON TABLE BSAKTX IS 
'Artikelstamm - Kundenzusatztext';



/******************************************************************************/
/****                         Fields descriptions                          ****/
/******************************************************************************/

COMMENT ON COLUMN BSAKTX.MANUELL IS 
'wurde der Text manuell oder automatisch erstellt';

COMMENT ON COLUMN BSAKTX.NEUESEITE_JN IS 
'Nach Text neue Seite beginnen';

COMMENT ON COLUMN BSAKTX.BAUFSTATUS IS 
'1 - AN
2 - AB/AU
3 - AN/AB/AU';



/******************************************************************************/
/****                              Privileges                              ****/
/******************************************************************************/


/* Privileges of users */
GRANT ALL ON BSAKTX TO PUBLIC;
