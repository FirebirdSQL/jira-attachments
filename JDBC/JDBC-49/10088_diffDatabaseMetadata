Index: src/org/firebirdsql/jdbc/FBDatabaseMetaData.java
===================================================================
RCS file: /cvsroot/firebird/client-java/src/org/firebirdsql/jdbc/FBDatabaseMetaData.java,v
retrieving revision 1.32
diff -r1.32 FBDatabaseMetaData.java
1609,1610c1609
<     private static final String GET_PROCEDURES_START = "select null as PROCEDURE_CAT,"
<         + " null as PROCEDURE_SCHEM,"
---
>     private static final String GET_PROCEDURES_START = "select "
1612,1614d1610
<         + " null as FUTURE1,"
<         + " null as FUTURE2,"
<         + " null as FUTURE3,"
1616,1617c1612
<         + " RDB$PROCEDURE_OUTPUTS as PROCEDURE_TYPE,"
<         + " RDB$OWNER_NAME "
---
>         + " RDB$PROCEDURE_OUTPUTS as PROCEDURE_TYPE "
1621c1616
<     private static final String GET_PROCEDURES_END = "1 = 1 order by 3";
---
>     private static final String GET_PROCEDURES_END = "1 = 1 order by 1";
1668c1663,1738
<         return c.doQuery(sql, params, statements);
---
>         ResultSet rs = c.doQuery(sql, params, statements);
>         XSQLVAR[] xsqlvars = new XSQLVAR[8];
> 
>         xsqlvars[0] = new XSQLVAR();
>         xsqlvars[0].sqltype = GDS.SQL_VARYING;
>         xsqlvars[0].sqllen = 31;
>         xsqlvars[0].sqlind = -1;
>         xsqlvars[0].sqlname = "PROCEDURE_CAT";
>         xsqlvars[0].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[1] = new XSQLVAR();
>         xsqlvars[1].sqltype = GDS.SQL_VARYING;
>         xsqlvars[1].sqllen = 31;
>         xsqlvars[1].sqlind = -1;
>         xsqlvars[1].sqlname = "PROCEDURE_SCHEM";
>         xsqlvars[1].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[2] = new XSQLVAR();
>         xsqlvars[2].sqltype = GDS.SQL_VARYING;
>         xsqlvars[2].sqllen = 31;
>         xsqlvars[2].sqlind = 0;
>         xsqlvars[2].sqlname = "PROCEDURE_NAME";
>         xsqlvars[2].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[3] = new XSQLVAR();
>         xsqlvars[3].sqltype = GDS.SQL_VARYING;
>         xsqlvars[3].sqllen = 31;
>         xsqlvars[3].sqlind = -1;
>         xsqlvars[3].sqlname = "FUTURE1";
>         xsqlvars[3].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[4] = new XSQLVAR();
>         xsqlvars[4].sqltype = GDS.SQL_VARYING;
>         xsqlvars[4].sqllen = 31;
>         xsqlvars[4].sqlind = -1;
>         xsqlvars[4].sqlname = "FUTURE2";
>         xsqlvars[4].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[5] = new XSQLVAR();
>         xsqlvars[5].sqltype = GDS.SQL_VARYING;
>         xsqlvars[5].sqllen = 31;
>         xsqlvars[5].sqlind = -1;
>         xsqlvars[5].sqlname = "FUTURE3";
>         xsqlvars[5].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[6] = new XSQLVAR();
>         xsqlvars[6].sqltype = GDS.SQL_VARYING;
>         xsqlvars[6].sqllen = 80; // gets updated if there are longer remarks.
>         xsqlvars[6].sqlind = 0;
>         xsqlvars[6].sqlname = "REMARKS";
>         xsqlvars[6].relname = "RDB$PROCEDURES";
> 
>         xsqlvars[7] = new XSQLVAR();
>         xsqlvars[7].sqltype = GDS.SQL_SHORT;
>         xsqlvars[7].sqlname = "PROCEDURE_TYPE";
>         xsqlvars[7].relname = "RDB$PROCEDURES";
> 
> 	// re-arrange data to match JDBC 2.0 spec
>         ArrayList rows = new ArrayList();
>         while (rs.next()) {
>             Object[] row = new Object[8];
>             row[0] = null;
>             row[1] = null;
>             row[2] = rs.getString("PROCEDURE_NAME").trim();
> 	    row[3] = null;
>             row[4] = null;
>             row[5] = null;
> 	    String remarks = rs.getString("REMARKS");
> 	    row[6] = remarks;
> 	    if (remarks != null && remarks.length() > xsqlvars[6].sqllen)
> 		    xsqlvars[6].sqllen = remarks.length();
>             short procedureType = rs.getShort("PROCEDURE_TYPE");
>             row[7] = (procedureType == 0) ? new Short((short)procedureNoResult) : new Short((short)procedureReturnsResult);
>             rows.add(row);
>         }
>         return new FBResultSet(xsqlvars, rows);
1812c1882
<         xsqlvars[6].sqltype = GDS.SQL_VARYING | 1;
---
>         xsqlvars[6].sqltype = GDS.SQL_VARYING;
1814d1883
<         xsqlvars[6].sqlind = -1;
1844,1846c1913,1915
<         xsqlvars[12].sqltype = GDS.SQL_VARYING | 1;
<         xsqlvars[12].sqllen = 31;
<         xsqlvars[12].sqlind = -1;
---
>         xsqlvars[12].sqltype = GDS.SQL_VARYING;
>         xsqlvars[12].sqllen = 80; // gets updated if we get a longer description
>         xsqlvars[12].sqlind = 0;
1868c1937
<             row[6] = null; // fixme: should be the type name as a string
---
>             row[6] = getDataTypeName(fieldType, fieldSubType, fieldScale); 
1869a1939
> 	    row[7] = null;
1886,1887c1956,1960
<             // row[12] = rs.getString("REMARKS").trim(); // fixme, DESCRIPTION is a longvarchar (blob), and getString will barf on it.
<             row[12] = null;
---
> 	    String remarks = rs.getString("REMARKS");
>             row[12] = remarks;
>             if (remarks != null && remarks.length() > xsqlvars[12].sqllen)
> 		    xsqlvars[12].sqllen = remarks.length();
> 
