--- C:/Python34/Lib/site-packages/fdb/servicesOrg.py	Tue Jul 08 17:09:29 2014
+++ C:/Python34/Lib/site-packages/fdb/services.py	Tue Jul 15 13:35:05 2014
@@ -867,7 +867,6 @@
         self.__check_active()
         # Begin parameter validation section.
         _checkString(source_database)
-        source_database = ibase.b(source_database)
         dest_filenames = self._require_str_or_tuple_of_str(dest_filenames)
 
         destFilenamesCount = len(dest_filenames)
@@ -1346,7 +1345,6 @@
         """
         self.__check_active()
         _checkString(database)
-        database = ibase.b(database)
         if mode not in (WRITE_FORCED, WRITE_BUFFERED):
             raise ValueError('mode must be one of the following constants:'
                 '  fdb.services.WRITE_FORCED, fdb.services.WRITE_BUFFERED.')
@@ -1363,7 +1361,6 @@
         """
         self.__check_active()
         _checkString(database)
-        database = ibase.b(database)
         if mode not in (ACCESS_READ_WRITE, ACCESS_READ_ONLY):
             raise ValueError('mode must be one of the following constants:'
                 ' fdb.services.ACCESS_READ_WRITE, fdb.services.ACCESS_READ_ONLY.')
@@ -1378,7 +1375,6 @@
         """
         self.__check_active()
         _checkString(database)
-        database = ibase.b(database)
         # The IB 6 API Guide says that dialect "must be 1 or 3", but other
         # dialects may become valid in future versions, so don't require
         #   dialect in (1, 3)
@@ -1808,11 +1804,7 @@
         # because it will cause isc_service_start to raise an inscrutable error
         # message with Firebird 1.5 (though it would not have raised an error
         # at all with Firebird 1.0 and earlier).
-        ### Todo: verify handling of P version differences, refactor
-        if ibase.PYTHON_MAJOR_VER == 3:
-            colonIndex = (databaseName.decode(fdb.fbcore._FS_ENCODING)).find(':')
-        else:
-            colonIndex = databaseName.find(':')
+        colonIndex = databaseName.find(':')
         if colonIndex != -1:
             # This code makes no provision for platforms other than Windows
             # that allow colons in paths (such as MacOS).  Some of
@@ -1839,7 +1831,8 @@
                     % databaseName[:colonIndex + 1],
                     UserWarning
                   )
-        self.add_string(ibase.isc_spb_dbname, databaseName)
+        databaseNameB = ibase.b(databaseName)
+        self.add_string(ibase.isc_spb_dbname, databaseNameB)
 
     def render(self):
         return ibase.b('').join(self._buffer)
\ No newline at end of file
