CREATE GLOBAL TEMPORARY TABLE TMP_TBL(
ID INTEGER) ON COMMIT DELETE ROWS;

EXECUTE BLOCK
AS
DECLARE VARIABLE L_ID INTEGER;
BEGIN
    L_ID = 0;
    WHILE (L_ID < 10000) DO BEGIN
        INSERT INTO TMP_TBL(ID)
        VALUES (:L_ID);
        L_ID = L_ID + 1;
    END
END;

SELECT COUNT(*) FROM TMP_TBL; --10K RECORDS

COMMIT; -- FILE SIZE 516KB

SELECT COUNT(*) FROM TMP_TBL; --0 RECORDS (BECAUSE OF ON COMMIT DELETE ROWS)

EXECUTE BLOCK
AS
DECLARE VARIABLE L_ID INTEGER;
BEGIN
    L_ID = 0;
    WHILE (L_ID < 10000) DO BEGIN
        INSERT INTO TMP_TBL(ID)
        VALUES (:L_ID);
        L_ID = L_ID + 1;
    END
END;

SELECT COUNT(*) FROM TMP_TBL; --10K RECORDS

COMMIT; -- FILE SIZE 516KB

SELECT COUNT(*) FROM TMP_TBL; --0 RECORDS (BECAUSE OF ON COMMIT DELETE ROWS)

EXECUTE BLOCK
AS
DECLARE VARIABLE L_ID INTEGER;
BEGIN
    L_ID = 0;
    WHILE (L_ID < 10000) DO BEGIN
        INSERT INTO TMP_TBL(ID)
        VALUES (:L_ID);
        L_ID = L_ID + 1;
    END
END;

SELECT COUNT(*) FROM TMP_TBL; --10K RECORDS

COMMIT RETAIN; -- FILE SIZE 516KB - IT USES THE SPACE RELEASED BY THE PREVIOUS COMMIT

SELECT COUNT(*) FROM TMP_TBL; --0 RECORDS (BECAUSE OF ON COMMIT DELETE ROWS)

EXECUTE BLOCK
AS
DECLARE VARIABLE L_ID INTEGER;
BEGIN
    L_ID = 0;
    WHILE (L_ID < 10000) DO BEGIN
        INSERT INTO TMP_TBL(ID)
        VALUES (:L_ID);
        L_ID = L_ID + 1;
    END
END;

SELECT COUNT(*) FROM TMP_TBL; --10K RECORDS

COMMIT RETAIN; -- FILE SIZE 1020KB - THE PREVIOUS COMMIT RETAIN DOES NOT RELEASE THE USED SPACE

SELECT COUNT(*) FROM TMP_TBL; --0 RECORDS (BECAUSE OF ON COMMIT DELETE ROWS)


